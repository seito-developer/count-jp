{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","speech","SpeechSynthesisUtterance","lang","text","rate","volume","pitch","className","type","onClick","window","speechSynthesis","speak","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKAmEeA,MA3Df,WAEE,IAAIC,EAAS,IAAIC,yBA+CjB,OA9CAD,EAAOE,KAAO,KACdF,EAAOG,KAAO,QACdH,EAAOI,KAAO,EACdJ,EAAOK,OAAS,EAChBL,EAAOM,MAAQ,EA2Cb,qBAAKC,UAAU,MAAf,SAIE,wBAAQC,KAAK,SAASC,QAtCN,WAClBC,OAAOC,gBAAgBC,MAAMZ,GAE7Ba,YAAW,WACTb,EAAOE,KAAO,KAGdQ,OAAOC,gBAAgBC,MAAMZ,KAuB5B,MAQD,0BChDSc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.8a5994ae.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst randomCounts = () => {\n  \n}\n\nfunction App() {\n\n  let speech = new SpeechSynthesisUtterance();\n  speech.lang = \"en\";\n  speech.text = '10000';\n  speech.rate = 1;\n  speech.volume = 1;\n  speech.pitch = 1;\n\n  // window.addEventListener('load', () => {\n  //   console.log(speechSynthesis.getVoices())\n  // })\n  // const synth = window.speechSynthesis;\n  // const voices = synth.getVoices();\n  // console.log(voices);\n\n  const handleClick = () => {\n    window.speechSynthesis.speak(speech);\n    \n    setTimeout(() => {\n      speech.lang = \"ja\";\n      // let utterance = new SpeechSynthesisUtterance('Ciao')\n      // utterance.lang = 'ja-JP'\n      window.speechSynthesis.speak(speech);\n      // speechSynthesis.onvoiceschanged = () => {\n      //   return 'ja-JP';\n      //   // if(typeof speechSynthesis === 'undefined') {\n      //   //   return;\n      //   // }\n      \n      //   // var voices = speechSynthesis.getVoices();\n      \n      //   // for(var i = 0; i < voices.length; i++) {\n      //   //   var option = document.createElement('option');\n      //   //   option.textContent = voices[i].name + ' (' + voices[i].lang + ')';\n      \n      //   //   if(voices[i].default) {\n      //   //     option.textContent += ' -- DEFAULT';\n      //   //   }\n      \n      //   //   option.setAttribute('data-lang', voices[i].lang);\n      //   //   option.setAttribute('data-name', voices[i].name);\n      //   //   document.getElementById(\"voiceSelect\").appendChild(option);\n      //   // }\n      // }\n      \n    }, 2000);\n  }\n\n  return (\n    <div className=\"App\">\n      {/* <select>\n        { }\n      </select> */}\n      <button type=\"button\" onClick={handleClick}>Click me!</button>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}