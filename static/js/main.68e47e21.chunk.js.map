{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["timer","App","speech","SpeechSynthesisUtterance","rate","volume","pitch","resetVal","lang","text","number1","Math","round","random","number2","floor","toString","randomCounts","chaseJp","window","speechSynthesis","speak","className","src","alt","type","onClick","clearTimeout","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kHAaIA,E,mDAoDWC,MAlDf,WAEE,IAAIC,EAAS,IAAIC,yBACjBD,EAAOE,KAAO,EACdF,EAAOG,OAAS,EAChBH,EAAOI,MAAQ,EAEf,IAAMC,EAAW,WACfL,EAAOM,KAAO,KACdN,EAAOO,KAnBU,WACnB,IAAMC,EAAUC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC1BC,EAAUH,KAAKC,MAAsB,IAAhBD,KAAKE,UAGhC,OAFYF,KAAKI,MAAML,EAAUI,GAEtBE,WAcKC,IAGVC,EAAU,WACdhB,EAAOM,KAAO,KACdW,OAAOC,gBAAgBC,MAAMnB,IAW/B,OACE,qBAAKoB,UAAU,aAAf,SACE,sBAAKA,UAAU,uCAAf,UACE,sBAAKA,UAAU,mGAAf,UACE,oBAAIA,UAAU,0BAAd,sBACA,mBAAGA,UAAU,UAAb,kGAIF,sBAAKA,UAAU,iHAAf,UACE,oBAAIA,UAAU,8BAAd,sBACA,qBAAKA,UAAU,wDAAwDC,IAAI,mKAAmKC,IAAI,gBAElP,qBAAKF,UAAU,cAAf,SACE,wBACEA,UAAU,mGACVG,KAAK,SAASC,QAxBN,WAClBnB,IACAY,OAAOC,gBAAgBC,MAAMnB,GAE7ByB,aAAa3B,GACbA,EAAQ4B,WAAWV,EAjCT,MAkDF,iCCxCGW,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.68e47e21.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst DELAY = 2000;\nconst randomCounts = () => {\n  const number1 = Math.round(Math.random() * 100);\n  const number2 = Math.round(Math.random() * 100);\n  const val = Math.floor(number1 * number2);\n\n  return val.toString();\n}\n\nlet timer:any;\n\nfunction App() {\n\n  let speech = new SpeechSynthesisUtterance();\n  speech.rate = 1;\n  speech.volume = 1;\n  speech.pitch = 1;\n\n  const resetVal = () => {\n    speech.lang = \"en\";\n    speech.text = randomCounts();\n  }\n  \n  const chaseJp = () => {\n    speech.lang = \"ja\";\n    window.speechSynthesis.speak(speech);\n  }\n\n  const handleClick = () => {\n    resetVal();\n    window.speechSynthesis.speak(speech);\n    \n    clearTimeout(timer);\n    timer = setTimeout(chaseJp, DELAY);\n  }\n\n  return (\n    <div className=\"App h-full\">\n      <div className=\"mx-5 mt-20 grid place-content-center\">\n        <div className=\"bg-gradient-to-r from-blue-400 to-indigo-500 rounded-2xl text-white p-8 text-center h-72 mx-auto\">\n          <h1 className=\"text-3xl mb-3 font-bold\">Count JP</h1>\n          <p className=\"text-lg\">\n            You can try to recognize numbers from English to Japanese by clicking the button!\n          </p>\n        </div>\n        <div className=\"bg-white py-8 px-8 text-center rounded-md shadow-lg transform -translate-y-20 sm:-translate-y-24 w-3/4 mx-auto\">\n          <h2 className=\"font-semibold text-2xl mb-6\">Count JP</h2>\n          <img className=\"w-20 h-20 object-cover rounded-full mx-auto shadow-lg\" src=\"https://images.unsplash.com/photo-1611342799915-5dd9f1665d04?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\" alt=\"User avatar\" />\n          {/* <p className=\"capitalize text-xl mt-1\">essie walton</p> */}\n          <div className=\"mt-5 w-full\">\n            <button \n              className=\"rounded-md bg-gradient-to-r from-blue-400 to-indigo-500 text-xl text-white pt-3 pb-4 px-8 inline\"\n              type=\"button\" onClick={handleClick}\n            >Listten!</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}